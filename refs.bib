@article{Duran2015,
abstract = {Production and trade growth opportunities brought about by globalization and increased competition, productivity growth requires in business. Sources declined with each passing day, constantly increasing needs. This in turn increases the need for businesses to use resources more efficiently. Work and time study techniques is raising the efficiency of utilization of the factors of production have been used for all manufacturing and service sectors as a scientific approach. In the content of study a firm that produces tea glass is analysed in terms work/time during the process of model production. In order to measure efficiency of tea glass models, time survey is made and by the help of that method standardized time is calculated. Actual time and standardized time is compared and as a result it is aimed that measuring inevitable times and take necessary precautions against them. As a result of the study, waiting time cause inefficiency in the work of molder and in the content of work/time, efficiency is increased 53 percent and model production capacity is reached at 237.},
author = {Duran, Cengiz and Cetindere, Aysel and Aksu, Yunus Emre},
doi = {10.1016/S2212-5671(15)00887-4},
file = {:C$\backslash$:/Users/fc.corporation/Desktop/artigo POO/Productivity-Improvement-by-Work-and-Time-Study-Techniq{\_}2015{\_}Procedia-Econom.pdf:pdf},
issn = {22125671},
journal = {Procedia Economics and Finance},
keywords = {business performance,productivity,total quality management},
number = {15},
pages = {109--113},
publisher = {Elsevier B.V.},
title = {{Productivity Improvement by Work and Time Study Technique for Earth Energy-glass Manufacturing Company}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S2212567115008874},
volume = {26},
year = {2015}
}
@article{Alfke1943,
author = {Alfke, Peter and Bolsens, Ivo and Carter, Bill},
file = {:C$\backslash$:/Users/fc.corporation/Desktop/artigo POO/06069771.pdf:pdf},
number = {November 2011},
pages = {15--20},
title = {{Fpga !}},
year = {1943}
}
@article{Yakopcic2017,
author = {Yakopcic, Chris and Wang, Shu and Wang, Weisong and Shin, Eunsung and Subramanyam, Guru and Taha, Tarek M},
file = {:C$\backslash$:/Users/fc.corporation/Desktop/artigo POO/07966056.pdf:pdf},
isbn = {9781509061822},
keywords = {convolution,device,memristor,neural network},
pages = {1704--1708},
title = {{Methods for High Resolution Programming in Lithuim Niobate Memristors for Neuromorphic Hardware}},
year = {2017}
}
@article{HÃ¸st2007,
abstract = {Method names make or break abstractions: good ones communicate the intention of the method, whereas bad ones cause confusion and frustration. The task of naming is subject to the whims and idiosyncracies of the individual since programmers have little to guide them except their personal experience. By analysing method implementations taken from a corpus of Java applications, we establish the meaning of verbs in method names based on actual use. The result is an automatically generated, domain-neutral lexicon of verbs, similar to a natural language dictionary, that represents the common usages of many programmers},
author = {H{\o}st, Einar W. and {\O}stvold, Bjarte M.},
doi = {10.1109/SCAM.2007.18},
file = {:C$\backslash$:/Users/fc.corporation/Desktop/artigo POO/04362913.pdf:pdf},
isbn = {0769528805},
journal = {SCAM 2007 - Proceedings 7th IEEE International Working Conference on Source Code Analysis and Manipulation},
pages = {193--202},
title = {{The programmer's lexicon, volume I: The verbs}},
volume = {I},
year = {2007}
}
@article{Marc-Andre,
abstract = {As the complexity ofmodern digital systems continues to in- crease exponentially, the need for beyondRTL designmethod- ologies is growing as well. In this paper, we propose a high- level hardware description language that allows the user to dynamically modify and constrain the connections between data token sources and sinks. Actual transfers occur when both sources and sinks are ready to proceed, according to different predefined synchronization protocols. At this level of abstraction, both FSM programming and constraint pro- gramming paradigms are combined to enhance the user's ability to describe and exploit fine-grain parallelismin control- intensive hardware designs. The proposed hardware descrip- tion methodology is applied to the description of two hard- ware implementations of theQuickSort algorithm, using pipe- lined memory and comparator components.},
author = {{M. DAIGNEAULT}, J. DAVID},
file = {:C$\backslash$:/Users/fc.corporation/Desktop/artigo POO/06339268.pdf:pdf},
isbn = {9781467322560},
pages = {515--518},
title = {{RAISING THE ABSTRACTION LEVEL OF HDL FOR CONTROL-DOMINANT APPLICATIONS Marc-Andre Daigneault and Jean Pierre David Department of Electrical Engineering , Ecole Polytechnique de Montreal}},
year = {2012}
}
@article{Abebe2009,
abstract = {Source code is a mixed software artifact, containing information for both the compiler and the developers. While programming language grammar dictates how the source code is written, developers have a lot of freedom in writing identifiers and comments. These are intentional in nature and become means of communication between developers.The goal of this paper is to analyze how the source code vocabulary changes during evolution, through an exploratory study of two software systems. Specifically, we collected data to answer a set of questions about the vocabulary evolution, such as: How does the size of the source code vocabulary evolve over time? What do most frequent terms refer to? Are new identifiers introducing new terms? Are there terms shared between different types of identifiers and comments? Are new and deleted terms in a type of identifiers mirrored in other types of identifiers or in comments?},
author = {Abebe, Surafel Lemma and Haiduc, Sonia and Marcus, Andrian and Tonella, Paolo and Antoniol, Giuliano},
doi = {10.1109/CSMR.2009.61},
file = {:C$\backslash$:/Users/fc.corporation/Desktop/artigo POO/04812752.pdf:pdf},
isbn = {9780769535890},
issn = {15345351},
journal = {Proceedings of the European Conference on Software Maintenance and Reengineering, CSMR},
pages = {189--198},
title = {{Analyzing the evolution of the source code vocabulary}},
year = {2009}
}
@article{Bduya1983,
author = {Bduya, M and Botta, H and Vignat, J C and Laboratoire, M and Insa, D G C U and Toulouse, D Informatique C E R T},
doi = {10.1016/0166-3615(84)90027-7},
file = {:C$\backslash$:/Users/fc.corporation/Desktop/artigo POO/01585618.pdf:pdf},
isbn = {0166-3615},
issn = {01663615},
pages = {382--385},
title = {{20th Design Automation Conference}},
year = {1983}
}
@article{Antoniol2007,
abstract = {Identifiers represent an important source of information for programmers understanding and maintaining a system. Self-documenting identifiers reduce the time and effort necessary to obtain the level of understanding appropriate for the task at hand. While the role of the lexicon in program comprehension has long been recognized, only a few works have studied the quality and enhancement of the identifiers and no works have studied the evolution of the lexicon. In this paper, we characterize the evolution of program identifiers in terms of stability metrics and occurrences of renaming. We assess whether an evolution process similar to the one occurring for the program structure exists for identifiers. We report data and results about the evolution of three large systems, for which several releases are available. We have found evidence that the evolution of the lexicon is more limited and constrained than the evolution of the structure. We argue that the different evolution results from several factors including the lack of advanced tool support for lexicon construction, documentation, and evolution.},
author = {Antoniol, Giuliano and Gu{\'{e}}h{\'{e}}neuc, Yann Ga{\"{e}}l and Merlo, Ettore and Tonella, Paolo},
doi = {10.1109/ICSM.2007.4362614},
file = {:C$\backslash$:/Users/fc.corporation/Desktop/artigo POO/04362614.pdf:pdf},
isbn = {1424412560},
issn = {10636773},
journal = {IEEE International Conference on Software Maintenance, ICSM},
pages = {14--23},
title = {{Mining the lexicon used by programmers during sofware evolution}},
year = {2007}
}
@article{Santos2015,
abstract = {Developers choose identifiers to name entities during software coding. While these names are lexically restricted by the language, they reflect the understanding of the developer on the requirements that the entity is devoted for. In this paper, we analyze the use of such vocabularies to identify experts on code entities. For a real software development, e-Pol (Management Information System for Federal Police of Brazil), we observed around 30{\%} of its code entities has more than 0.3 of similarity with at least one developer vocabulary. We propose an approach to catch this potential expertise that vocabularies carries on. Also, we built an oracle of source code entities per developer that allowed us to assess our approach accuracy compared with two others ones: based on commit and based on percentage of modified Lines of Codes. One advantage of our approach is to disregard changes in formatting or indentation of source code as acts of expertise acquisition. We achieve an accuracy ranging from 0.16 to 0.32 depending on the assumed period of developers' contributions and the top-k experts we are interested on. These results confirm similarity between vocabularies might be explored to point out code experts. Moreover, for orphaned entities, expertise approach based on vocabularies can recommend among current team members one whose vocabulary is closest to the entity.},
author = {Santos, Katyusco De F and Guerrero, Dalton D S and Figueiredo, Jorge C A De},
doi = {10.1109/ITNG.2015.149},
file = {:C$\backslash$:/Users/fc.corporation/Desktop/artigo POO/07113514.pdf:pdf},
isbn = {9781479988273},
journal = {Proceedings - 12th International Conference on Information Technology: New Generations, ITNG 2015},
keywords = {expertise,oracle of experts,software vocabulary},
pages = {451--456},
title = {{Using Developers Contributions on Software Vocabularies to Identify Experts}},
year = {2015}
}
@article{IEEEComputerSociety2013,
abstract = {The definition of the language syntax and semantics for SystemVerilog, which is a unified hardware design, specification, and verification language, is provided. This standard includes support for modeling hardware at the behavioral, register transfer level (RTL), and gate-level abstraction levels, and for writing testbenches using coverage, assertions, object-oriented programming, and constrained random verification. The standard also provides application programming interfaces (APIs) to foreign programming languages.},
author = {{IEEE Computer Society} and {IEEE Standards Association Corporate Advisory Group}},
doi = {10.1109/IEEESTD.2013.6469140},
file = {:C$\backslash$:/Users/fc.corporation/Desktop/artigo POO/2012 System Verilog Language Reference Manual.pdf:pdf},
isbn = {978-0-7381-8110-3},
keywords = {assertions, design automation, design verification},
number = {February},
pages = {1315},
title = {{IEEE Standard for SystemVerilogâUnified Hardware Design, Specification, and Verification Language}},
volume = {2012},
year = {2013}
}
@book{Ieee1990,
abstract = {Describes the IEEE Std 610.12-1990, IEEE standard glossary of software engineering terminology, which identifies terms currently in use in the field of software engineering. Standard definitions for those terms are established.},
author = {Ieee},
booktitle = {Office},
doi = {10.1109/IEEESTD.1990.101064},
file = {:C$\backslash$:/Users/fc.corporation/Desktop/artigo POO/00159342.pdf:pdf},
isbn = {155937067X},
issn = {0-7381-0391-8},
keywords = {definitions,dictionary,glossary,software engineering,terminology},
number = {1},
pages = {1},
pmid = {3418514},
title = {{IEEE Standard Glossary of Software Engineering Terminology}},
url = {http://ieeexplore.ieee.org/xpls/abs{\_}all.jsp?arnumber=159342},
volume = {121990},
year = {1990}
}
@article{BENEDUSI1992225,
title = "Reverse engineering processes, design document production, and structure charts",
journal = "Journal of Systems and Software",
volume = "19",
number = "3",
pages = "225 - 245",
year = "1992",
issn = "0164-1212",
doi = "https://doi.org/10.1016/0164-1212(92)90053-M",
url = "http://www.sciencedirect.com/science/article/pii/016412129290053M",
author = "P Benedusi and A Cimitile and U De Carlini"
}
